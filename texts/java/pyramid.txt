//Пирамидальная сортировка

import java.util.Random;
import java.util.Scanner;

public class Pyramid {
	public static void main(String[] args) {
		//Ввод данных
		System.out.print("Введите количество элементов массива -> ");
		Scanner in = new Scanner(System.in);
		int count = Integer.parseInt(in.next());
		in.close();
		int arr[] = new int[count];
		
		//Рандом
		Random rand = new Random();
		System.out.print("Числа будут таковы -> ");
		for (int i = 0; i < count; i++) {
			arr[i] = 1 + rand.nextInt() % 100;
			if (arr[i] < 0) arr[i] *= -1;
			System.out.print(arr[i] + " ");
		}
		System.out.println();
		
		//Сортировка
		heapSort(arr, count);
		
		//Вывод
		System.out.print("Результат -> ");
		for (int i = 0; i < count; i++) System.out.print(arr[i] + " ");
	}
	
	private static void heapSort(int[] arr, int count) {
		if (count == 0) return;
		
		int length = count;
		for (int i = length / 2 - 1; i >= 0; i--) heapify(arr, length, i);
		for (int i = length - 1; i >= 0; i--) {
			int temp = arr[0];
			arr[0] = arr[i];
			arr[i] = temp;
			
			heapify(arr, i, 0);
		}
	}
	
	private static void heapify(int[] arr, int length, int i) {
		int leftChild = 2 * i + 1;
		int rightChild = 2 * i + 2;
		int largest = i;
		
		if (leftChild < length && arr[leftChild] > arr[largest]) largest = leftChild;
		if (rightChild < length && arr[rightChild] > arr[largest]) largest = rightChild;
		if (largest != i) {
			int temp = arr[i];
			arr[i] = arr[largest];
			arr[largest] = temp;
			
			heapify(arr, length, largest);
		}
	}
}
