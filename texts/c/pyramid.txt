//Пирамидальная сортировка

#include <stdio.h>
#include <time.h>
#include <stdlib.h>

void heapSort(int arr[], int count);
void heapify(int arr[], int length, int i);

int main() {
	//Ввод данных
	int count;
	printf("Введите количество элементов массива -> ");
	scanf("%d", &count);
	int arr[count];
	
	//Рандом
	srand(time(0));
	printf("Числа будут таковы -> ");
	for (int i = 0; i < count; i++) {
		arr[i] = 1 + rand() % 100;
		printf("%d ", arr[i]);
	}
	printf("\n");
	
	//Сортировка
	heapSort(arr, count);
	
	//Вывод
	printf("Результат -> ");
	for (int i = 0; i < count; i++) printf("%d ", arr[i]);
	
	return 0;
}

void heapSort(int arr[], int count) {
	if (count == 0) return;
	
	int length = count;
	for (int i = length / 2 - 1; i >= 0; i--) heapify(arr, length, i);
	for (int i = length - 1; i >= 0; i--) {
		int temp = arr[0];
		arr[0] = arr[i];
		arr[i] = temp;
		
		heapify(arr, i, 0);
	}
}

void heapify(int arr[], int length, int i) {
	int leftChild = 2 * i + 1;
	int rightChild = 2 * i + 2;
	int largest = i;
	
	if (leftChild < length && arr[leftChild] > arr[largest]) largest = leftChild;
	if (rightChild < length && arr[rightChild] > arr[largest]) largest = rightChild;
	if (largest != i) {
		int temp = arr[i];
		arr[i] = arr[largest];
		arr[largest] = temp;
		
		heapify(arr, length, largest);
	}
}
