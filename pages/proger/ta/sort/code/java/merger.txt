//Сортировка слиянием

import java.util.Random;
import java.util.Scanner;

public class Merger {
	public static void main(String[] args) {
		//Ввод данных
		System.out.print("Введите количество элементов массива -> ");
		Scanner in = new Scanner(System.in);
		int count = Integer.parseInt(in.next());
		in.close();
		int arr[] = new int[count];
		
		//Рандом
		Random rand = new Random();
		System.out.print("Числа будут таковы -> ");
		for (int i = 0; i < count; i++) {
			arr[i] = 1 + rand.nextInt() % 100;
			if (arr[i] < 0) arr[i] *= -1;
			System.out.print(arr[i] + " ");
		}
		System.out.println();
		
		//Сортировка
		mergeSort(arr, 0, count - 1);
		
		//Вывод
		System.out.print("Результат -> ");
		for (int i = 0; i < count; i++) System.out.print(arr[i] + " ");
	}
	
	private static void mergeSort(int[] arr, int left, int right) {
		if (right <= left) return;
		int mid = (left + right) / 2;
		mergeSort(arr, left, mid);
		mergeSort(arr, mid + 1, right);
		merge(arr, left, mid, right);
	}
	
	private static void merge(int[] arr, int left, int mid, int right) {
		//Вычисляем длину
		int lengthLeft = mid - left + 1;
		int lengthRight = right - mid;
		
		//Создаём временные подмассивы
		int leftArr[] = new int[lengthLeft];
		int rightArr[] = new int[lengthRight];
		
		//Копируем отсортированные массивы во временные
		for (int i = 0; i < lengthLeft; i++) leftArr[i] = arr[left + i];
		for (int i = 0; i < lengthRight; i++) rightArr[i] = arr[mid + i + 1];
		
		//Итераторы содержат текущий индекс временного подмассива
		/* Итератор - это метод (функция), которые принимает блок или объект класса */
		int leftIndex = 0;
		int rightIndex = 0;
		
		//Копируем из leftArr и rightArr обратно в массив
		for (int i = left; i < right + 1; i++) {
			//Если остаются нескопированные элементы в right и left, копируем минимальный
			if (leftIndex < lengthLeft && rightIndex < lengthRight) {
				if (leftArr[leftIndex] < rightArr[rightIndex]) {
					arr[i] = leftArr[leftIndex];
					leftIndex++;
				} else {
					arr[i] = rightArr[rightIndex];
					rightIndex++;
				}
				
			//Если все элементы были скопированы из rightArr, скопировать остальные из leftArr
			} else if (leftIndex < lengthLeft) {
				arr[i] = leftArr[leftIndex];
				leftIndex++;
				
			//Если все элементы были скопированы из leftArr, скопировать остальные из rightArr
			} else if (rightIndex < lengthRight) {
				arr[i] = rightArr[rightIndex];
				rightIndex++;
			}
		}
	}
}
