//Бинарный поиск

#include <iostream>
#include <ctime>
#include <cstdlib>

using namespace std;

const int NOT_FOUND = -1;

void genArr(int arr[], int size);
void sort(int arr[], int size);
int find(const int *arr, int size, int key);

int main() {
	//Переменные
	int size, key, index;
	
	//Ввод данных
	cout << "Введите количество элементов массива -> ";
	cin >> size;
	int arr[size];
	
	//Рандом
	genArr(arr, size);
	
	//Сортировка
	sort(arr, size);
	cout << "Новые числа будут таковы -> ";
	for (int i = 0; i < size; i++) cout << arr[i] << " ";
	cout << endl;
	
	//Ввод данных
	cout << "Введите любое число -> ";
	cin >> key;
	
	//Поиск
	index = find(arr, size, key);
	
	//Результат
	if (index != NOT_FOUND) cout << "Число " << key << " найдено по номеру " << index;
	else cout << "Число не найдено!";
	
	return 0;
}

void genArr(int arr[], int size) {
	srand(time(0));
	for (int i = 0; i < size; i++) arr[i] = 1 + rand() % 100;
}

void sort(int arr[], int size) {
	/*
		Сортировку можно (а вообще желательно) брать абсолютно любую. Об этом переходите по ссылке:
		https://lessonsandtimetables.tk/pages/proger/ta/sort.html
	*/
	bool sorted = false;
	int temp;
	while (!sorted) {
		sorted = true;
		for (int i = 0; i < size - 1; i++) {
			if (arr[i] > arr[i + 1]) {
				temp = arr[i];
				arr[i] = arr[i + 1];
				arr[i + 1] = temp;
				sorted = false;
			}
		}
	}
}

int find(const int *arr, int size, int key) {
	int left = 0;
	int right = size - 1;
	int index;
	bool found = false;
	
	while ((left <= right) && !found) {
		index = (left + right) / 2;
		
		if (arr[index] == key) found = true;
		else if (arr[index] > key) right = index - 1;
		else left = index + 1;
	}
	
	if (found) return index;
	else return NOT_FOUND;
}
